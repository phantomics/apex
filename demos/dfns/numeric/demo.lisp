;;; -*- Mode:Lisp; Syntax:ANSI-Common-Lisp; Coding:utf-8; Package:AprilDemo.Dfns.Numeric -*-
;;;; demo.lisp

(in-package :april-demo.dfns.numeric)

(april-load (with (:space numeric-demo-space))
	    (asdf:system-relative-pathname (intern (package-name *package*) "KEYWORD") "numeric.apl"))

(specify-demo
 "April numeric demo"
 (with :space numeric-demo-space
       :description "Implements numeric functions from Dyalog's dfns.")
 (:tests (is "1 adic¨0 to 5" #(#* #*1 #*11 #*111 #*1111 #*11111))
	 (is "1 2∘adic¨8 4⍴0 to 32"
	     #2A((#() #(1) #(2) #(1 1)) (#(1 2) #(2 1) #(2 2) #(1 1 1))
		 (#(1 1 2) #(1 2 1) #(1 2 2) #(2 1 1)) (#(2 1 2) #(2 2 1) #(2 2 2) #(1 1 1 1))
		 (#(1 1 1 2) #(1 1 2 1) #(1 1 2 2) #(1 2 1 1)) (#(1 2 1 2) #(1 2 2 1) #(1 2 2 2) #(2 1 1 1))
		 (#(2 1 1 2) #(2 1 2 1) #(2 1 2 2) #(2 2 1 1)) (#(2 2 1 2) #(2 2 2 1) #(2 2 2 2) #(1 1 1 1 1))))
	 (provision "s1790 ← s1790 ← 'CT'   'DE'  'GA'  'KY'  'MD'   'MA'   'NH'   'NJ'   'NY'   'NC'   'PA'   'RI'  'SC'   'VT'  'VA'")
	 (provision "p1790 ← 236841 55540 70835 68705 278514 475327 141822 179570 331589 353523 432879 68446 206236 85533 630560")
	 (provision "s2010 ← 'AL'    'AK'   'AZ'    'AR'    'CA'     'CO'    'CT'    'DE'   'FL'     'GA'    'HI'    'ID'    'IL'     'IN'    'IA'    'KS'    'KY'    'LA'    'ME'    'MD'    'MA'    'MI'    'MN'    'MS'    'MO'    'MT'    'NE'    'NV'    'NH'    'NJ'    'NM'    'NY'     'NC'    'ND'   'OH'     'OK'    'OR'    'PA'     'RI'    'SC'    'SD'   'TN'    'TX'     'UT'    'VT'   'VA'    'WA'    'WV'    'WI'    'WY'")
	 (provision "p2010 ← 4822023 731449 6553255 2949131 38041430 5187582 3590347 917092 19317568 9919945 1392313 1595728 12875255 6537334 3074186 2885905 4380415 4601893 1329192 5884563 6646144 9883360 5379139 2984926 6021988 1005141 1855525 2758931 1320718 8864590 2085538 19570261 9752073 699628 11544225 3814820 3899353 12763536 1050292 4723723 833354 6456243 26059203 2855287 626011 8185867 6897012 1855413 5726398 576412")
	 (is "105 apportion p1790" #(7 2 2 2 8 14 4 5 10 10 12 2 6 3 18))
	 (is ",⍕s1790,⍪105 apportion p1790" " CT   7 DE   2 GA   2 KY   2 MD   8 MA  14 NH   4 NJ   5 NY  10 NC  10 PA  12 RI   2 SC   6 VT   3 VA  18")
	 (is "apportion p2010" #(7 1 9 4 53 7 5 1 27 14 2 2 18 9 4 4 6 6 2 8 9 14 7 4 8 1 3 4 2 12 3 27 14 1 16 5 5 18 2 7 1 9 36 4 1 11 10 3 8 1))
	 (is ",⍕s2010,⍪apportion p2010" " AL   7 AK   1 AZ   9 AR   4 CA  53 CO   7 CT   5 DE   1 FL  27 GA  14 HI   2 ID   2 IL  18 IN   9 IA   4 KS   4 KY   6 LA   6 ME   2 MD   8 MA   9 MI  14 MN   7 MS   4 MO   8 MT   1 NE   3 NV   4 NH   2 NJ  12 NM   3 NY  27 NC  14 ND   1 OH  16 OK   5 OR   5 PA  18 RI   2 SC   7 SD   1 TN   9 TX  36 UT   4 VT   1 VA  11 WA  10 WV   3 WI   8 WY   1")
	 (is "{⍵≥5} bsearch 3 7" #(5))
	 (is "{⍵≥9} bsearch 3 7" #(8))
	 (is "{⍵≥1} bsearch 3 7" #(3))
	 (is "colsum 10 10⍴⍳9" #(5 1 2 3 4 5 6 7 8 8 6))
	 (is "colsum 10 10⍴1" #(1 1 1 1 1 1 1 1 1 1 0))
	 (is "2 colsum 10 10⍴1" #(1 0 0 1 1 1 1 1 1 1 0 1 1 0))
	 (is "3 colsum 10 10⍴1" #(1 1 2 2 2 2 2 2 2 2 1 1))
	 (is "colsum 4 5⍴⍳9" #(1 8 2 6 0 4))
	 (is "2 3 5 7 ∘.efract 11 13 17 19"
	     #2A((#(6 66) #(7 91) #(9 153) #(10 190)) (#(4 44) #(5 33 2145) #(6 102) #(7 67 8911))
		 (#(3 9 99) #(3 20 780) #(4 23 1564) #(4 76)) (#(2 8 88) #(2 26) #(3 13 663) #(3 29 1653))))
	 (is "factorial¨⍳10" #(1 2 6 24 120 720 5040 40320 362880 3628800))
	 (is "fibonacci¨⍳10" #(1 1 2 3 5 8 13 21 34 55))
	 ;; fibs:
	 (is "⌊sulFib¨⍳10" #(1 1 2 3 5 8 13 21 34 55))
	 (is "{+/{⍵!⌽⍵}(⍳⍵)-⎕io}¨⍳10" #(1 1 2 3 5 8 13 21 34 55))
	 (is "⍬∘⍴∘⊃∘(⊢∘⌽∘(+\\)/)∘(,∘(⊂0 1))∘⍳¨⍳10" #(1 1 2 3 5 8 13 21 34 55))
	 (is "⌊(0.5×1+1 ¯1×5*0.5)∘{(-⌿⍺∘.*⍵)÷-/⍺} ⍳10" #(1 1 2 3 5 8 13 21 34 55))
	 (is "{1∧+∘÷/0,⍵/1}¨⍳10" #(1 1 2 3 5 8 13 21 34 55))
	 (is "factors +441256830030" #(2 3 3 5 71 73 945949))
	 (is "factors +441256830031" #(587 9007 83459))
	 (is "105 gcd 330" 15)
	 (is "k6174¨⍳20"
	     #(#(1 999 8991 8082 8532 6174) #(2 1998 8082 8532 6174)
	       #(3 2997 7173 6354 3087 8352 6174) #(4 3996 6264 4176 6174)
	       #(5 4995 5355 1998 8082 8532 6174) #(6 5994 5355 1998 8082 8532 6174)
	       #(7 6993 6264 4176 6174) #(8 7992 7173 6354 3087 8352 6174)
	       #(9 8991 8082 8532 6174) #(10 999 8991 8082 8532 6174)
	       #(11 1089 9621 8352 6174) #(12 2088 8532 6174) #(13 3087 8352 6174)
	       #(14 4086 8172 7443 3996 6264 4176 6174)  #(15 5085 7992 7173 6354 3087 8352 6174)
	       #(16 6084 8172 7443 3996 6264 4176 6174) #(17 7083 8352 6174)
	       #(18 8082 8532 6174) #(19 9081 9621 8352 6174) #(20 1998 8082 8532 6174)))
	 (is "factors (3×5×7) gcd 5×7×11" #(5 7))
	 (is "factors (3×5×7) lcm 5×7×11" #(3 5 7 11))
	 (is "¯1 0 1∘.gcd ¯1 0 1" #2A((1 1 1) (1 0 1) (1 1 1)))
	 (is "¯1 0 1∘.lcm ¯1 0 1" #2A((1 0 -1) (0 0 0) (-1 0 1)))
	 (is "8 uns ¯3 to 3" #(253 254 255 0 1 2 3))
	 (is "100 nicediv 7" #(14 15 14 14 14 15 14))
	 (is "↑(0 to 10)nicediv¨5" #2A((0 0 0 0 0) (0 0 1 0 0) (0 1 0 1 0) (1 0 1 0 1) (1 1 0 1 1) (1 1 1 1 1)
				     (1 1 2 1 1) (1 2 1 2 1) (2 1 2 1 2) (2 2 1 2 2) (2 2 2 2 2)))
	 (is "⍕⊖¨100 stack¨12 23 39"
	     #2A((#\  #\  #\⎕ #\  #\  #\⎕ #\  #\  #\⎕ #\  #\  #\⎕ #\  #\  #\  #\  #\⎕ #\  #\ 
		      #\⎕ #\  #\  #\⎕ #\  #\  #\⎕ #\  #\⎕ #\  #\  #\⎕ #\  #\  #\⎕ #\  #\  #\⎕ #\  #\  #\ 
		      #\⎕ #\  #\⎕ #\  #\⎕ #\  #\⎕ #\⎕ #\  #\⎕ #\  #\⎕ #\  #\⎕ #\  #\⎕ #\⎕ #\  #\⎕
		      #\  #\⎕ #\  #\⎕ #\⎕ #\  #\⎕ #\  #\⎕ #\  #\⎕ #\  #\⎕ #\⎕ #\  #\⎕ #\  #\⎕ #\  #\⎕)
		 (#\  #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\  #\  #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕
		      #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\  #\  #\⎕
		      #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕
		      #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕)
		 (#\  #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\  #\  #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕
		      #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\  #\  #\⎕
		      #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕
		      #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕)
		 (#\  #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\  #\  #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕
		      #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\  #\  #\ 
		      #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\ 
		      #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\ )
		 (#\  #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\  #\  #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕
		      #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\  #\  #\ 
		      #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\ 
		      #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\ )
		 (#\  #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\  #\  #\  #\  #\  #\  #\  #\ 
		      #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\ 
		      #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\ 
		      #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\ )
		 (#\  #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\  #\  #\  #\  #\  #\  #\  #\ 
		      #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\ 
		      #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\ 
		      #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\ )
		 (#\  #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\  #\  #\  #\  #\  #\  #\  #\ 
		      #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\ 
		      #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\ 
		      #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\ )
		 (#\  #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\⎕ #\  #\  #\  #\  #\  #\  #\  #\ 
		      #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\ 
		      #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\ 
		      #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\  #\ )))
	 (is "{∧/⍵∧.=⍵∘.{+/⍺ nicediv ⍵}⍵}⍳50" 1)
	 (is "osc¨⍳30" #(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
	 (is "0 5 10 15 range ¯2+⍳18" #(0 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 4 4))
	 (is "¯1 0 1 range 1○⍳40"
	     #(2 2 2 1 1 1 2 2 2 1 1 1 2 2 2 1 1 1 2 2 2 1 1 1 1 2 2 2 1 1 1 2 2 2 1 1 1 2 2 2))
	 (is "(5 7 to 20)range 2 3 4⍴1 to 24"
	     #3A(((0 0 0 0) (1 1 2 2) (3 3 4 4)) ((5 5 6 6) (7 7 8 8) (8 8 8 8))))
	 (is "rational 0.75" #(3.0d0 4.0d0))
	 (is "rational (+∘÷)/¨1<⍳¨⍳10" #2A((0 1 1 2 3 5 8 13 21 34) (1 1 2 3 5 8 13 21 34 55)))
	 (is "⍬ sieve 2 to 100" #(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97))
	 (is "{(~v∊v∘.×v)/v←1↓⍳⍵} 100"
	     #(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97))
	 (is "stamps¨50 51 52 53" #(#(43 6 1) #(39 6 6) #(26 26) #(43 10)))
	 (is "stamps¨15 16 17 18" #(#(10 5) #(10 6) #(10 6 1) #(6 6 6)))
	 (is "(⊂1 2 4 8 16 32)stamps¨15 16 17 18" #(#(8 4 2 1) #(16) #(16 1) #(16 2)))
	 (is "(⊂1 ¯1 3 ¯3 9 ¯9 27 ¯27)stamps¨12 13 14 15" #(#(9 3) #(9 3 1) #(27 -1 -3 -9) #(27 -3 -9)))
	 (is "3 to 10" #(3 4 5 6 7 8 9 10))
	 (is "10 to 3" #(10 9 8 7 6 5 4 3))
	 (is "7 to 7" #(7))
	 (is "5 7 to 13" #(5 7 9 11 13))
	 (is "1 3 to 4" #(1 3))
	 (is "¯10 ¯15 to ¯25" #(-10 -15 -20 -25))
	 (is "⌈100×1.5 1.7 to 2.5" #(150 170 190 210 230 250))
	 (is "0 3 to 10" #(0 3 6 9))
	 (is "7 8 to 7" #(7))
	 (is "7 8 to 6" #())
	 (is "⌊1000×¯4↑1.001 1.002 to 2" #(1996 1997 1998 1999))
	 (is "-alt×2 2⍴2 3 4 5" -2)
	 (is "-alt×0⍪⍨2 2⍴2 3 4 5" -2)
	 (is "-alt×2 2⍴0 1,1 0" -1)
	 (is "-alt×1 1⍴3" 3)
	 (is "-alt× {÷1+∘.+⍨(⍳⍵)-⎕io} 5" 1/266716800000)
	 (is "+alt+2 2⍴⍳4" 10)
	 (is ",alt,3 3⍴⎕A" #0A"AEIHFDBIHCGBFEC")
	 (is "cfract 5÷8" #(0 1 1 1 2))
	 (is "cfract 67÷29" #(2 3 4 2))
	 (is "cfract¨¯4 to 4" #(#(-4) #(-3) #(-2) #(-1) #*0 #*1 #(2) #(3) #(4)))
	 (is "cfract *1" #(2 1 2 1 1 4 1 1 6 2))
	 (is "cfract ○1" #(3 7 15 1 292 1 1 1 2 1 3 1 14 3))
	 (is "cfract 0.5×1+root 5" #(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 9 1 3 2 1 2))
	 (is "cfract ¯2.3" #(-3 1 2 3))
	 (is "cfract 0.5×3+root 13" #(3 3 3 3 3 3 3 3 1 1 1 2 2 1 4 1 5))
	 (is "rational+∘÷/¨,\\0 cfract ○1"
	     #2A((3 22 333 355 103993 104348 208341 312689 833719 1146408 4272943 5419351 80143857 245850922)
		 (1 7 106 113 33102 33215 66317 99532 265381 364913 1360120 1725033 25510582 78256779)))
	 (is "⌊100000×(0.9 0.02) bayes {⍵,1-⍵}0.03" #(58189 41810))
	 (is "⌊100000×(3 2 4÷11 11 16) bayes 11 11 16÷38" #(33333 22222 44444))
	 (is "⌊100000×Cholesky 5 5⍴111  106   22  ¯85  ¯14 106  198  ¯91 ¯150   69 22  ¯91  196   22 ¯118 ¯85 ¯150   22  166  ¯77 ¯14   69 ¯118  ¯77  151"
	     #2A((1053565 0 0 0 0) (1006107 983741 0 0 0) (208814 -1138602 787389 0 0)
		 (-806785 -699664 -518384 500847 0) (-132883 837306 -252599 -843204 128299)))
	 (is "det 2 2⍴2 3 4 5" -2)
	 (is "det 1 1⍴3" 3)
	 (is "det 0 0⍴7" 1)
	 (is "det {÷1+∘.+⍨(⍳⍵)-⎕io} 5" 1/266716800000)
	 (is "det 2 2⍴ 0 1, 1 0" -1)
	 (is "3 ×kcell ⍳5" #(-1 -1 0 1 1))
	 (is "×kcell .5" -1.0)
	 (is "2 4 ×kcell ⍳5" #(1 0 -1 0 1))
	 (is "+kcell 1 5⍴.5 0 1 ¯1.5 2" #(0.0 -1 1 -2.0 2))
	 (is "2 4 +kcell 1 2 3 4 5" #(-2 -1 0 1 2))
	 (is "kball .5" -1.0)
	 (is "2 1 kball 1 3⍴2 3 4" #(-1 0 1))
	 (is "kball .5 .5" -1.0)
	 (is "kball ¯1 0" 0)
	 (is "kball .8 .9" 1.0)
	 (is "5 kball 2 3" -1)
	 (is "5 kball 3 4" 0)
	 (is "5 kball 5 6" 1)
	 (is "5 kball 5 6" 1)
	 (is "5 1 2 kball 2 3,4 6,⍪9 9" #(-1 0 1))
	 (is "13 kball 5 6 7" -1)
	 (is "13 kball 3 4 12" 0)
	 (is "13 kball 6 8 12" 1)
	 (is "13 ¯1 2 ¯3 kball 4 2 9,2 6 15,⍪2 1 4" #(0 1 -1))
	 (is "⌊100000×1 ksphere 10" 6283185)
	 (is "⌊100000×2 ksphere 10" 125663707)
	 (is "⌊10000×(0 to 10) ksphere 1" #(19999 62831 125663 197392 263189 310062
					    330733 324696 296865 255016 207251))
	 (is "⌊10000×6.2569 ksphere 1" 331611)
	 (is "⌊10000×(⍳10) kvol 1" #(19999 31415 41887 49348 52637 51677 47247 40587 32985 25501))
	 (is "mean 1 2 3 4" #(5/2))
	 (is "stdev 2 2 2" #(0.0))
	 (is "⌊100000×stdev 1 2 3" #(81649))
	 ;; add time-consuming function to test NormRand?
	 (is "root 64" 8)
	 (is "3 root 64" 4)
	 (is "realroots 2 1 ¯3" #(1.0 -1.5))
	 ;; TODO: ⌈⌊ don't work with complex numbers - get these results rounded
	 ;; (is "roots ⍳3" #(#C(-99999.99999999999d0 141421.35623730952d0)
	 ;; 		  #C(-100000.0d0 -141421.35623730952d0)))
	 (is "⌊10000×polar⍉↑ ¯1 0 1∘.,1 0 ¯1" #2A((14142 10000 14142 23561 15707 7853)
						  (10000 0 10000 31415 31415 0)
						  (14142 10000 14142 39269 47123 54977)))
	 (is "4 rnd polar⍉↑ ¯1 0 1∘.,1 0 ¯1" #2A((7071/5000 1 7071/5000 11781/5000 3927/2500 3927/5000)
						 (1 0 1 3927/1250 3927/1250 0)
						 (7071/5000 1 7071/5000 3927/1000 11781/2500 27489/5000)))
	 (is "⌊100000×polar 0 0" #(0 314159))
	 (is "¯1 polar polar 0 0" #(-0.0 0.0))
	 (is "3 rnd poly 12" #2A((1 433/500 1/2 0 -1/2 -433/500 -1 -433/500 -1/2 0 1/2 433/500)
				 (0 1/2 433/500 1 433/500 1/2 0 -1/2 -433/500 -1 -433/500 -1/2)))
	 (is "⌈(1,12÷○2) ×[1] 2 12⍴polar poly 12" ;; bug: why is 2 12⍴ needed?
	     #2A((1 1 1 1 1 1 1 1 1 1 1 1) (0 1 2 3 4 5 6 7 8 9 10 11)))
	 ;; (is "{⍵ ≡ 6 rnd ¯1 polar polar ⍵}⍉↑ ¯1 0 1∘.,1 0 ¯1") bug
	 ))
